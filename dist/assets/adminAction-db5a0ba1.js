import{i as r}from"./index-aadf72d3.js";const n=async()=>{try{return(await r.get("/admin/user/unvalidated-freelancers")).data}catch(a){throw a}},o=async a=>{try{return await r.get(`/admin/user/unvalidated-freelancers/${a}`)}catch(t){throw t}},E=async a=>{try{return await r.delete(`/admin/user/unvalidated-freelancers/${a}`)}catch(t){throw t}},y=async()=>{try{return await r.get("/admin/user/all-users")}catch(a){throw a}},c=async(a,t)=>{try{return await r.delete(`/admin/user/all-users/${a}/${t}`)}catch(e){throw e}},p=async()=>{try{return await r.get("/admin/placement")}catch(a){throw a}},i=async()=>{try{return await r.get("/admin/user/freelance-user")}catch(a){throw a}},l=async()=>{try{return await r.get("/admin/user/company-user")}catch(a){throw a}},A=async a=>{try{return await r.post("/admin/placement",a)}catch(t){throw t}},h=async a=>{try{return await r.delete(`/admin/placement/${a}`)}catch(t){throw t}},_=async(a,t)=>{try{return await r.put(`/admin/placement/${t}`,a)}catch(e){throw e}},d=async a=>{try{return await r.post("/admin/company",a)}catch(t){throw t}},w=async()=>{try{return await r.get("/admin/company")}catch(a){throw a}},T=async(a,t)=>{try{return await r.put(`/admin/company/${a}`,t)}catch(e){throw e}},L="FETCH_UNVALIDATED_USERS",C="VALIDATE_USER_FREELANCE",u="DELETE_USER_FREELANCE_WAIT",W=async a=>{try{const t=await n();a({type:L,payload:t})}catch(t){throw t}},$=async(a,t)=>{try{await o(t),a({type:C,payload:t})}catch(e){throw e}},V=async(a,t)=>{try{await E(t),a({type:u,payload:t})}catch(e){throw e}},N="FETCH_ALL_USERS",m="FILTER_DATA_IN_COMPANY",S="FILTER_DATA_IN_FREELANCE",D="SEE_ALL_DATA",U="DELETE_USER",x=async a=>{try{const e=(await y()).data.result;a({type:N,payload:e})}catch(t){throw t}},b=async a=>{try{a({type:m,payload:null})}catch(t){throw t}},j=async a=>{try{a({type:S,payload:null})}catch(t){throw t}},k=async a=>{try{a({type:D,payload:null})}catch(t){throw t}},q=async(a,t,e)=>{try{await c(t,e),a({type:U,payload:{userId:t,userRoles:e}})}catch(s){throw s}},F="FETCH_LIST_PLACEMENT",P="FETCH_LIST_COMPANY",R="FETCH_LIST_FREELANCE",f="ADD_NEW_PLACEMENT",v="DELETE_PLACEMENT",M="PUT_PLACEMENT",z=async a=>{try{const t=await p();a({type:F,payload:t==null?void 0:t.data.result})}catch(t){throw t}},B=async a=>{try{const t=await i();a({type:R,payload:t.data.result})}catch(t){throw t}},G=async a=>{try{const t=await l();a({type:P,payload:t.data.result})}catch(t){throw t}},J=async(a,t)=>{try{const e=await A(t);a({type:f,payload:e.data.result})}catch(e){throw e}},K=async(a,t)=>{try{const e=await h(t);a({type:v,payload:t})}catch(e){throw e}},Q=async(a,t,e)=>{try{const s=await _(t,e);a({type:M,payload:s.data.result})}catch(s){throw s}},I="CREATE_NEW_COMPANY",H="FECTH_DATA_USER_ALL_COMPANY",O="DELETE_USER_COMPANY",Y="UPDATE_USER_COMPANY",X=async(a,t)=>{try{const e=await d(t);a({type:I,payload:e.data})}catch(e){throw e}},Z=async a=>{try{const t=await w();a({type:H,payload:t.data})}catch(t){throw t}},tt=async(a,t,e)=>{try{await c(t,e),a({type:O,payload:{userId:t,userRoles:e}})}catch(s){throw s}},at=async(a,t,e)=>{try{const s=await T(t,e);a({type:Y,payload:s.data.result})}catch(s){throw s}};export{f as A,Q as B,I as C,U as D,K as E,m as F,M as P,D as S,Y as U,C as V,S as a,N as b,j as c,b as d,q as e,x as f,H as g,O as h,Z as i,tt as j,X as k,u as l,L as m,W as n,V as o,v as p,P as q,R as r,k as s,F as t,at as u,$ as v,z as w,B as x,G as y,J as z};
